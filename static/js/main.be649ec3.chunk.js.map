{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/InputForm/InputForm.js","components/Shapes/Shapes.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","InputForm","PropTypes","string","isRequired","bool","func","props","text","value","name","error","onChange","onBlur","NewMovie","state","inputs","errors","titleError","imgUrlError","imdbUrlError","imdbIdError","isValid","handleInput","event","newTitle","target","setState","prevState","handleValidation","isCorrect","errorName","patternUrl","length","test","Number","Object","values","every","input","handleNewMovie","preventDefault","newMovie","onAaddMovie","reset","this","onSubmit","required","type","disabled","Component","App","moviesFromServer","addMovie","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be649ec3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport './InputForm.scss';\nimport { InputFormTypes } from '../Shapes/Shapes';\n\nexport const InputForm = (props) => {\n  const {\n    text,\n    value,\n    name,\n    error,\n    onChange,\n    onBlur,\n  } = props;\n\n  return (\n    <label className=\"label\">\n      {text}\n      <input\n        className={error ? 'input input--error' : 'input'}\n        name={name}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      {error\n        ? (\n          <span className=\"error__message\">\n            {`Please, type correct ${text}`}\n          </span>\n        )\n        : ''}\n\n    </label>\n  );\n};\n\nInputForm.propTypes = InputFormTypes;\n","import PropTypes from 'prop-types';\n\nexport const InputFormTypes = {\n  text: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\n\nexport const NewMovieTypes = {\n  onAaddMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport '../InputForm/InputForm.scss';\nimport './NewMovie.scss';\nimport { NewMovieTypes } from '../Shapes/Shapes';\n\nimport { InputForm } from '../InputForm/InputForm';\n\nexport class NewMovie extends Component {\n  state = {\n    inputs: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      titleError: false,\n      imgUrlError: false,\n      imdbUrlError: false,\n      imdbIdError: false,\n    },\n    isValid: true,\n  };\n\n  handleInput = (event) => {\n    const newTitle = event.target.value;\n    const { name } = event.target;\n\n    this.setState(prevState => ({\n      inputs: {\n        ...prevState.inputs,\n        [name]: newTitle,\n      },\n    }));\n  }\n\n  handleValidation = (event) => {\n    const { value, name } = event.target;\n    const errorName = `${name}Error`;\n\n    // eslint-disable-next-line max-len\n    const patternUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    let isCorrect;\n\n    switch (name) {\n      case 'title':\n        isCorrect = value.length < 3;\n        break;\n      case 'imgUrl':\n        isCorrect = !patternUrl.test(value);\n        break;\n      case 'imdbUrl':\n        isCorrect = !patternUrl.test(value);\n        break;\n      case 'imdbId':\n        isCorrect = !Number(this.state.inputs.imdbId);\n        break;\n      default: isCorrect = false;\n    }\n\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        [errorName]: isCorrect,\n      },\n    }));\n\n    this.setState(prevState => ({\n      isValid: Object.values(prevState.errors)\n        .every(input => input === false),\n    }));\n  }\n\n  handleNewMovie = (event) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title: this.state.inputs.title,\n      description: this.state.inputs.description,\n      imgUrl: this.state.inputs.imgUrl,\n      imdbUrl: this.state.inputs.imdbUrl,\n      imdbId: this.state.inputs.imdbId,\n    };\n\n    this.props.onAaddMovie(newMovie);\n\n    this.setState({\n      inputs: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n\n    event.target.reset();\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.inputs;\n\n    const {\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state.errors;\n\n    return (\n      <form\n        className=\"form\"\n        name=\"newMovie\"\n        onSubmit={this.handleNewMovie}\n      >\n        <InputForm\n          text=\"Title\"\n          name=\"title\"\n          value={title}\n          error={titleError}\n          onChange={this.handleInput}\n          onBlur={this.handleValidation}\n        />\n        <label className=\"label\">\n          Description\n          <textarea\n            className=\"input textarea\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleInput}\n            onBlur={this.handleValidation}\n            required\n          />\n        </label>\n        <InputForm\n          name=\"imgUrl\"\n          text=\"img Url\"\n          value={imgUrl}\n          error={imgUrlError}\n          onChange={this.handleInput}\n          onBlur={this.handleValidation}\n        />\n        <InputForm\n          text=\"imdb Url\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          error={imdbUrlError}\n          onChange={this.handleInput}\n          onBlur={this.handleValidation}\n        />\n        <InputForm\n          name=\"imdbId\"\n          text=\"imdb Id\"\n          value={imdbId}\n          error={imdbIdError}\n          onChange={this.handleInput}\n          onBlur={this.handleValidation}\n        />\n        <button\n          name=\"addNewMovie\"\n          type=\"submit\"\n          disabled={!this.state.isValid}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = NewMovieTypes;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((prevState) => {\n      prevState.movies.push(movie);\n\n      return {\n        movies: prevState.movies,\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAaddMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}